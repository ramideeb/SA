
package calendar;

import ToDoList.toDO;
import database.Event;
import database.Task;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.persistence.EntityManager;
import javax.persistence.Persistence;
import javax.swing.ImageIcon;
import static study.assistant.StudyAssistant.prog;
import study.assistant.home;


public class EventPnl extends javax.swing.JPanel {

    /**
     * Creates new form EventPnl
     */
    public EventPnl(Event ev) {
        initComponents();
        e=ev;
        updatePanels(ev);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eventNameLbl = new javax.swing.JLabel();
        eventTimeLbl = new javax.swing.JLabel();
        eventNTimeLbl = new javax.swing.JLabel();
        eventDescLbl = new javax.swing.JLabel();
        notificationLbl = new javax.swing.JLabel();
        settingsLbl = new javax.swing.JLabel();
        deleteLbl = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        eventNameLbl.setFont(new java.awt.Font("Ubuntu Light", 0, 18)); // NOI18N
        eventNameLbl.setForeground(new java.awt.Color(177, 8, 55));
        eventNameLbl.setText("Circut first exam");

        eventTimeLbl.setFont(new java.awt.Font("Ubuntu Light", 1, 14)); // NOI18N
        eventTimeLbl.setText("Nov 30 at 12:20 PM");

        eventNTimeLbl.setFont(new java.awt.Font("Ubuntu Light", 1, 14)); // NOI18N
        eventNTimeLbl.setText("Notify me 2 days in advance");

        eventDescLbl.setFont(new java.awt.Font("Ubuntu Light", 1, 14)); // NOI18N
        eventDescLbl.setText("Until section 12.1");
        eventDescLbl.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        notificationLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/turn-notifications-on-button-24.png"))); // NOI18N
        notificationLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        notificationLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                notificationLblMouseClicked(evt);
            }
        });

        settingsLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/settings(2).png"))); // NOI18N
        settingsLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        settingsLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsLblMouseClicked(evt);
            }
        });

        deleteLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/delete(1).png"))); // NOI18N
        deleteLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteLblMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eventNTimeLbl)
                    .addComponent(eventTimeLbl)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eventNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addComponent(eventDescLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notificationLbl)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(deleteLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(settingsLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notificationLbl)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(eventNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eventTimeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eventNTimeLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eventDescLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(settingsLbl))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void notificationLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_notificationLblMouseClicked
        if(e.getNF()==BigInteger.ONE){
            e.setNTime(null);
            e.setNF(BigInteger.ZERO);
            notificationLbl.setIcon(new ImageIcon(getClass().getResource("/photos/notifications-button-24.png")));
        }
        else{
            NotificationForm nf=new NotificationForm(e);
        nf.setVisible(true);
        nf.setLocationRelativeTo(this);
        notificationLbl.setIcon(new ImageIcon(getClass().getResource("/photos/turn-notifications-on-button-24.png")));
        }
        prog.home.alterpanel.removeAll();
        prog.home.alterpanel.revalidate();
        prog.home.alterpanel.repaint();
        prog.home.alterpanel.add(new CalendarPnl());
    }//GEN-LAST:event_notificationLblMouseClicked

    private void settingsLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsLblMouseClicked
        EditEventFrame edf=new EditEventFrame(e);
        edf.setVisible(true);
        edf.setLocationRelativeTo(this);
        prog.home.alterpanel.removeAll();
        prog.home.alterpanel.revalidate();
        prog.home.alterpanel.repaint();
        prog.home.alterpanel.add(new CalendarPnl());
    }//GEN-LAST:event_settingsLblMouseClicked

    private void deleteLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteLblMouseClicked
        EntityManager em = Persistence.createEntityManagerFactory("gitPU").createEntityManager();
        em.getTransaction().begin();
        
        em.remove(em.find(Event.class, e.getEid()));
        
        home.user.getEventCollection().remove(e);
        em.getTransaction().commit();
        em.close();

        prog.home.alterpanel.removeAll();
        prog.home.alterpanel.revalidate();
        prog.home.alterpanel.repaint();
        prog.home.alterpanel.add(new CalendarPnl());
    }//GEN-LAST:event_deleteLblMouseClicked
    public void updatePanels(Event e){
        eventNameLbl.setText(e.getName());
        eventDescLbl.setText(e.getDescription());
        SimpleDateFormat format=new SimpleDateFormat("MMM dd HH:MM a");
        eventTimeLbl.setText(format.format(e.getTime()));
        String time;//check calnedar
        if(e.getNF()==BigInteger.ONE)
        {  notificationLbl.setIcon(new ImageIcon(getClass().getResource("/photos/turn-notifications-on-button-24.png")));
           int d=e.getTime().getDay()-e.getNTime().getDay();
           eventNTimeLbl.setText(String.format("Notify me %d days in advance",d));
        }
        else{
            notificationLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/photos/notifications-button-24.png")));
            eventNTimeLbl.setText("");
        }
    }
    private final String MONTHS[]={"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};
    private Event e;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel deleteLbl;
    private javax.swing.JLabel eventDescLbl;
    private javax.swing.JLabel eventNTimeLbl;
    private javax.swing.JLabel eventNameLbl;
    private javax.swing.JLabel eventTimeLbl;
    private javax.swing.JLabel notificationLbl;
    private javax.swing.JLabel settingsLbl;
    // End of variables declaration//GEN-END:variables
}
